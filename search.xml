<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Redis]]></title>
    <url>%2F2019%2F05%2F29%2FRedis%2F</url>
    <content type="text"><![CDATA[一、概念Redis是一款高性能的NOSQL系列（NoSQL = Not Only SQL ）的数据库 1.1.什么是NOSQL​ NoSQL(NoSQL = Not Only SQL)，意即“不仅仅是SQL”，是一项全新的数据库理念，泛指非关系型的数据库。​ 随着互联网web2.0网站的兴起，传统的关系数据库在应付web2.0网站，特别是超大规模和高并发的SNS类型的web2.0纯动态网站已经显得力不从心，暴露了很多难以克服的问题，而非关系型的数据库则由于其本身的特点得到了非常迅速的发展。NoSQL数据库的产生就是为了解决大规模数据集合多重数据种类带来的挑战，尤其是大数据应用难题。 ​ 1.1.1. NOSQL和关系型数据库比较​ 优点：​ 1）成本：nosql数据库简单易部署，基本都是开源软件，不需要像使用oracle那样花费大量成本购买使用，相比关系型数据库价格便宜。​ 2）查询速度：nosql数据库将数据存储于缓存之中，关系型数据库将数据存储在硬盘中，自然查询速度远不及nosql数据库。​ 3）存储数据的格式：nosql的存储格式是key,value形式、文档形式、图片形式等等，所以可以存储基础类型以及对象或者是集合等各种格式，而数据库则只支持基础类型。​ 4）扩展性：关系型数据库有类似join这样的多表查询机制的限制导致扩展很艰难。 ​ 缺点：​ 1）维护的工具和资料有限，因为nosql是属于新的技术，不能和关系型数据库10几年的技术同日而语。​ 2）不提供对sql的支持，如果不支持sql这样的工业标准，将产生一定用户的学习和使用成本。​ 3）不提供关系型数据库对事务的处理。 ​ 1.1.2. 非关系型数据库的优势： ​ 1）性能NOSQL是基于键值对的，可以想象成表中的主键和值的对应关系，而且不需要经过SQL层的解析，所以性能非常高。​ 2）可扩展性同样也是因为基于键值对，数据之间没有耦合性，所以非常容易水平扩展。 ​ 1.1.3. 关系型数据库的优势：​ 1）复杂查询可以用SQL语句方便的在一个表以及多个表之间做非常复杂的数据查询。​ 2）事务支持使得对于安全性能很高的数据访问要求得以实现。对于这两类数据库，对方的优势就是自己的弱势，反之亦然。 ​ 1.1.4. 总结​ 关系型数据库与NoSQL数据库并非对立而是互补的关系，即通常情况下使用关系型数据库，在适合使用NoSQL的时候使用NoSQL数据库，​ 让NoSQL数据库对关系型数据库的不足进行弥补。​ 一般会将数据存储在关系型数据库中，在nosql数据库中备份存储关系型数据库的数据 1.2.主流的NOSQL产品​ • 键值(Key-Value)存储数据库​ 相关产品： Tokyo Cabinet/Tyrant、Redis、Voldemort、Berkeley DB​ 典型应用： 内容缓存，主要用于处理大量数据的高访问负载。​ 数据模型： 一系列键值对​ 优势： 快速查询​ 劣势： 存储的数据缺少结构化​ • 列存储数据库​ 相关产品：Cassandra, HBase, Riak​ 典型应用：分布式的文件系统​ 数据模型：以列簇式存储，将同一列数据存在一起​ 优势：查找速度快，可扩展性强，更容易进行分布式扩展​ 劣势：功能相对局限​ • 文档型数据库​ 相关产品：CouchDB、MongoDB​ 典型应用：Web应用（与Key-Value类似，Value是结构化的）​ 数据模型： 一系列键值对​ 优势：数据结构要求不严格​ 劣势： 查询性能不高，而且缺乏统一的查询语法​ • 图形(Graph)数据库​ 相关数据库：Neo4J、InfoGrid、Infinite Graph​ 典型应用：社交网络​ 数据模型：图结构​ 优势：利用图结构相关算法。​ 劣势：需要对整个图做计算才能得出结果，不容易做分布式的集群方案。 1.3 什么是Redis​ Redis是用C语言开发的一个开源的高性能键值对（key-value）数据库，官方提供测试数据，50个并发执行100000个请求,读的速度是110000次/s,写的速度是81000次/s ，且Redis通过提供多种键值数据类型来适应不同场景下的存储需求，目前为止Redis支持的键值数据类型如下：​ 1) 字符串类型 string​ 2) 哈希类型 hash​ 3) 列表类型 list​ 4) 集合类型 set​ 5) 有序集合类型 sortedset​ 1.3.1 redis的应用场景​ • 缓存（数据查询、短连接、新闻内容、商品内容等等）​ • 聊天室的在线好友列表​ • 任务队列。（秒杀、抢购、12306等等）​ • 应用排行榜​ • 网站访问统计​ • 数据过期处理（可以精确到毫秒​ • 分布式集群架构中的session分离 二、命令操作1. Redis的数据结构Redis存储的是键值对，key都是字符串，value可以有5种不同的类型数据： 字符串 string 哈希类型 hash：map格式，可以存储键值对 列表类型 list：linkedlist格式，元素可以重复 集合类型 set 元素不可以重复 有序集合类型 sortedset 元素可以重复而且有序 2. Redis命令操作 字符串string 存储：set key value 获取：get key 删除：del key 哈希类型 hash 存储：hset key field value 获取： hget key field：获取指定的field对应的值 hgetall key：获取所有的field和value 删除：hdel key field 1234hset myhash username Tomhset myhash age 18hget myhash age -- 18 列表类型 list：可以添加一个元素到列表的头部（左）或者尾部（右） 存储： lpush key value：将元素加入列表左边 rpush key value：将元素加入列表右边 获取： lrange key start end：范围获取 删除： lpop：删除最左边元素，并返回该元素 rpop：删除最右边元素，并返回该元素 12345lpush mylist alpush mylist blpush mylist c -- a-&gt;b-&gt;clrange mylist 0 -1 -- 获取mylist所有的元素 集合类型 set 存储：sadd key value 获取：smembers key：获取集合中所有的元素 删除：srem key value：删除集合中某个元素 有序集合类型 sortedset 存储：zadd key score value 获取：zrange key start end（withscores） 删除：zrem key value 1234567891011 127.0.0.1:6379&gt;zadd sorted 10 aaa(integer) 1127.0.0.1:6379&gt; zadd sorted 30 bbb(integer) 1127.0.0.1:6379&gt; zadd sorted 20 ccc(integer) 1127.0.0.1:6379&gt; zrange sorted 0 -1// 按照分数（score）排序1) &quot;aaa&quot;2) &quot;ccc&quot;3) &quot;bbb&quot; 常用的通用命令： keys *：查询所有的键 type key：获取键对应的value的类型 del key：删除指定的key以及该key对应的value 三、Redis持久化Redis是一个基于内存的数据库，因此当Redis服务器重启会导致数据丢失，可以将Redis数据库的数据存储到硬盘。 1. Redis持久化机制 RDB: 默认方式，不需要进行配置，默认使用的机制，在一定的时间间隔内，检测key的变化情况，然后持久化数据 编辑配置文件：redis.windows.conf 1234567# after 900 sec (15 min) if at least 1 key changed# after 300 sec (5 min) if at least 10 keys changed# after 60 sec if at least 10000 keys changedsave 900 1save 300 10save 60 10000 重新启动Redis服务器，并且指定配置文件:$ redis-server.exe redis.windows.conf AOF: 记录日志的方式，可以记录每一条操作的命令，操作命令后就持久化数据（这样的效果和mysql类似了） 编辑配置文件：redis.windows.conf 12345678# 开启aof模式appendonly no --&gt; appendonly yes# aof模式下的三种持久化方式# appendfsync always # 总是，每一条操作都持久化appendfsync everysec # 每间隔1s进行一次持久化# appendfsync no # 不进行持久化 四、Java客户端Jedis Jedis是一款java操作Redis数据库的工具，类似于JDBC 使用步骤： 下载、导入jar包 使用 使用Demo 12345678910111213141516@Testpublic void test2() &#123; // 获取连接, 如果使用的是空参数的构造，那么默认就是localhost和6379 Jedis jedis = new Jedis("localhost", 6379); // 操作 jedis.set("username", "David"); String username = jedis.get("username"); System.out.println(username);// David // 可以使用方法setex来存储指定的过期时间的key value jedis.setex("activeCode", 20, "didi");// 20秒后键activeCode、值didi就被自动删除 // 关闭连接 jedis.close();&#125; Jedis连接池 12345678910111213141516171819@Testpublic void test5() &#123; // 创建一个配置对象 JedisPoolConfig config = new JedisPoolConfig(); config.setMaxTotal(50);// 最大的允许连接数量 config.setMaxIdle(10);// 最大的空闲连接数 // 创建一个JedisPool连接池对象 JedisPool jedisPool = new JedisPool(config, &quot;localhost&quot;, 6379); // 获取连接 Jedis jedis = jedisPool.getResource(); // 使用 jedis.set(&quot;username&quot;, &quot;Tom&quot;); // 归还连接给连接池 jedis.close();&#125;]]></content>
      <tags>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Test1]]></title>
    <url>%2F2019%2F05%2F28%2F2019-05-28-Test1%2F</url>
    <content type="text"><![CDATA[1. aaa aa aa aa bb dd dd dd cc cc cc gg ss rr gg fg gg jj jl lk ;l jl; | ;djf;a | df || —— | ——- || | js;dfj || ;fja | ;adflaj || ;asdjf | dsf |]]></content>
  </entry>
  <entry>
    <title><![CDATA[Lunix基础]]></title>
    <url>%2F2019%2F05%2F28%2FLunix%E5%9F%BA%E7%A1%80%2F</url>
    <content type="text"><![CDATA[一、linux的应用领域 基于linux的企业服务器：很多公司使用Linux作为服务端系统 嵌入式应用：安卓、智能家居、银行系统等 Linux在电影娱乐业的应用 二、常用命令命令基本格式：命令 [-选项] [参数]，例如：ls -la /usr 当有多个选项，可以写在一起 1. 目录、文件处理命令 ls：-l（long，显示详细信息）；-h（human，大小按kb、MB显示）；-a（显示隐藏文件）；-d（显示目录本身而非目录下文件的信息） mkdir：-p（递归创建，可以创建中间尚未存在的目录） pwd：打印当前目录的路径 rmdir：删除空目录；-r（） cp：cp 源文件 目标目录；-p（保存文件的属性，如修改时间等）；-r（复制目录）； mv：移动，移动目录不用加-r选项 rm：-r（删除目录）；-f（强制删除）； touch：创建文件 cat：查看文件；-n（查看的时候可以显示行号） more：查看文件，回车（翻页）；空格（换行）；q（退出） less：查看文件，可以向上翻页 head：查看文件 hean -n 20 filename（查看前20行） tail：和head类似，查看文件末尾 2. 更改文件权限 chmod：读r、写w、执行x三种权限用数字4、2、1表示，如 chmod 777 filename，表示所有用户拥有所有权限 权限对于文件和目录的含义不同：对于文件来说写w是修改文件，对于目录来说写w是在目录里创建删除目录（文件） chown：改变文件的所有者。chown 用户 文件或者目录（将文件的所有这改为新的所有者） chgrp：改变文件的所属组。chown 用户组 文件或者目录； umask：查看默认的创建文件、目录的权限 3. 文件搜索命令 find：find [搜索范围] [匹配条件] -name：匹配条件为文件名，*匹配任意字符串，？匹配任意单个字符，find /etc -name init -iname：不区分大小写的文件名 -size：+n（文件大小大于），-n（文件大小小于），=n（文件大小等于） -amin：匹配条件为访问时间，在/etc目录下查找5分钟内被访问过的文件 find /etc -amin -5 -mmin：匹配条件为修改时间，在/etc目录下查找30分钟内被修改过的文件 `find /etc -mmin -30 -type：匹配条件为文件类型，f表示文件，d表示目录 -a：当有多个查询条件时，使用-a连接，表示and -o：当有多个查询条件时，使用-o连接，表示or locate：类似于everything -i：不区分大小写 updatdb：更新文件资料库 grep：在文件内容中查找 sudo grep mysql /root/install.log -v：排除包含指定字符的行，如排除以#开始的行（也就是注释行）grep -v ^# mysql /root/install.log man：命令的帮助信息 man ls：查看ls的帮助信息 4.关机重启命令 shutdown：-r(重启)、-h(重启)、-c(取消前一个关机重启命令) #### 5. 打包压缩命令 打包压缩为.tar.gz tar -zcvf 打包压缩后的文件名 要打包压缩的文件 tar -zcvf xxx1.tar.gz a.txt b.python c.cpp dir1 dir2 tar -zcvf /usr/* 解压缩，-C 加解压后文件的位置 tar -xvf 压缩包 tar -xvf xxx.tar.gz(解压缩后放在当前目录) tar -xvf xxx.tar.gz -C ~/Desktop(解压缩后放在Desktop) zip压缩解压缩 压缩：zip -r xxx.zip ./*，将当前录下所有文件包括目录压缩为xxx.zip 解压缩：unzip -o -d ~/Desktop/dir xxx.zip，将xxx.zip解压到桌面下的dir目录，并且重复了（-o）也不提示就覆盖 5. vim常用操作、技巧 常用操作 插入命令： 命令 插入位置 i 在光标所在字符前插入 I 在光标所在行首插入 o 在光标下一行插入新行 O 在光标下一行插入新行 a 在光标所在字符后插入 A 在光标所在行尾插入 定位命令： 命令 作用 ：set nu 设置行号 ：set nonu 取消行号 x 删除光标所在处字符 nx 删除光标所在处后n个字符 dd 删除光标所在行 ndd 删除n行 D 删除光标所在处到行尾内容 复制剪切命令： 命令 作用 yy 复制当前行 nyy 复制当前行以下n行 dd 剪切当前行 ndd 剪切当前行以下n行 p、P 粘贴在当前行上、或者行下 取消和替换： 命令 作用 u 取消上一步操作 R 从光标所在处开始替换，知道按esc r 替换光标所在字符 查找： 命令 作用 /string 搜索指定字符串，如果要忽略大小写先输入命令 :set ic 退出和保存： 命令 作用 :w 保存修改 :w new_filename 另存为新文件 :wq 保存修改并退出 :q! 不保存修改退出 ZZ 快捷键，保存修改并退出 ​]]></content>
  </entry>
</search>
